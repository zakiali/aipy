AIPY (Astronomical Interferometry in PYthon)

DESCRIPTION
    This package collects together tools for radio astronomical interferometry.
    In addition to pure-python phasing, calibration, imaging, and
    deconvolution code, this package includes interfaces to MIRIAD (a Fortran
    interferometry package) and HEALPix (a package for representing spherical 
    data sets), and some math/fitting routines from SciPy. 

ON THE WEB
    There are further instructions, documentation, and a FAQ at:
    http://setiathome.berkeley.edu/~aparsons/aipy/aipy.cgi

INSTALLATION
    This is a *nix package.  With some trouble it can install on intel-based
    Macs. It probably doesn't install on Windows. You need to have
    python >= 2.4 (and < 3.0 for now).  AIPY depends on the following 
    python packages:
        numpy >= 1.2
        pyephem >= 3.7.3
        astropy, or pyfits >= 1.3
        *matplotlib >= 0.98.3
        *matplotlib-basemap >= 0.99
        (* installation can proceed without these, but some scripts won't work)

    INSTALLING DEPENDENCIES
        OPTION 1 (safest): Manually install the dependencies.
        OPTION 2 (experimental): Open up the AIPY download, and with network
            connectivity and root access, type:
            $ install_required.sh
            and then (if you want matplotlib/basemap):
            $ install_recommended.sh

    INSTALL AS ROOT
        > sudo python setup.py install

    INSTALL AS USER
        You'll first install to a directory of your choice:
        $ python setup.py install --install-lib <module_dir> \
            --install-scripts <scripts_dir>
        This puts the python module in <module_dir>, and the command-line 
        scripts in <scripts_dir>.  The next thing is to tell python where to 
        look for the python module.  This is done by setting the PYTHONPATH 
        variable to point to <module_dir>.  In bash, this looks like:
        $ export PYTHONPATH=<module_dir>
        However, you'll have to type this every time you open a terminal.  To
        avoid this, add the export line to the .bashrc file in your home dir.

    COMMAND-LINE SCRIPTS
        Unless you installed as user, these will be in /usr/bin.  For more info
        use the "-h" option with any of these commands:

DOCUMENTATION
    If you want to build html documentation, you'll first need sphinx on 
    your system:
        > easy_install -U sphinx
    Then you should be able to cd into the doc directory and run:
        > make html
    The results will appear in doc/build/html.  There are plenty of other 
    build options, too.  Many thanks to Jayce Dowell for his work on this.

Enjoy,
Aaron Parsons

-----------------------------------------------------------------------------

PACKAGE INFO FOR DEVELOPERS
    The subpackage "optimize" was copied in from scipy-0.6.0, and then all
    code that depended on non-pure-python modules was removed.  If these ever 
    need to be updated, download scipy source and copy scipy/scipy/optimize 
    into aipy, and then remove any code deemed unnecessary.  Unfortunately, 
    then you may need to crawl through the code and replace all "scipy" 
    references with "aipy".

    The subpackage "_cephes" was copied in from scipy-0.6.0/special, and then
    all but the cephes and c_misc code was removed to avoid needing a Fortran
    compiler.  _cephesmodule.c needed substantial editing to remove external
    dependencies.

    The miriad source code (aipy/miriad/mirsrc) was included from 
    MIRIAD-4.0.5.  To update, download miriad source and copy $MIR/src/subs/* 
    and $MIR/src/inc/* into aipy/miriad/mirsrc.  Not all files are used, but 
    include them all anyway.

    Healpix source code (aipy/healpix/cxx) was included from Healpix-2.01.
    To update, download healpix source and copy src/cxx into aipy/healpix.
